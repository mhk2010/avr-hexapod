TAGS		= ctags
DEVICE	= atmega8
F_CPU	= 12000000
#F_CPU	= 14745600
FUSE_L	= 0xFF
#FUSE_L	= 0xE1
FUSE_H	= 0xD9
#AVRDUDE	= avrdude -p m8 -c stk500v2 -P COM4 # edit this line for your programmer, this settings fits Windows system.
AVRDUDE	= avrdude -p m8 -c stk500v2 -y -P /dev/ttyUSB0 # This port firt the Linux Ubuntu installation 
DEBUG    = -Os -gdwarf-2
SIZE_TOOL_DETAILS=avr-nm
SIZE_TOOL_DETAILS_OPTIONS=--size-sort --radix=dec

# Define the include folders and additional pragmas.
#CFLAGS  = -DDEBUG_LEVEL=0 -D_HW_DEBUG -D_NO_KEYBOARD
CFLAGS_RELEASE  = -DDEBUG_LEVEL=0 -DUSE_MATH
CFLAGS_DEBUG  = -DDEBUG_LEVEL=0 -DUSART_DEBUG -DUSE_MATH
#CFLAGS_DEBUG  = -DDEBUG_LEVEL=0 -D_HW_DEBUG -DLCD_DEBUG

#Define all the subfolders for the project
INCLUDE_PATH = -I. -IUSART
INCLUDE_LIBS = 

######################################
# define the structure of the project. 
######################################
SOURCES_RELEASE = main.tests.c 
SOURCES_DEBUG = main.tests.c USART/usart.c USART/tx.c USART/txstr.c USART/rx.c

#####################################
# Compilation instructions
#####################################
# define the set of compilation options.
#RELEASE:
COMPILE_RELEASE = avr-gcc -Wall $(DEBUG) -fpack-struct -fshort-enums -DF_CPU=$(F_CPU) $(INCLUDE_PATH) $(CFLAGS_RELEASE) -mmcu=$(DEVICE) $(INCLUDE_LIBS)
#DEBUG
COMPILE_DEBUG = avr-gcc -Wall -O2 -g -fpack-struct -fshort-enums -DF_CPU=$(F_CPU) $(INCLUDE_PATH) $(CFLAGS_DEBUG) -mmcu=$(DEVICE) $(INCLUDE_LIBS)


# symbolic targets:
help:
	@echo "hexapod brain - control logic for 12-servo hexapod"
	@echo "--------------------------------------------------------------------------------"
	@echo "This makefile build the hexapod firmaware."
	@echo " "
	@echo "This Makefile has no default rule. Use one of the following:"
	@echo "make release .......... to build main.hex"
	@echo "make debug ............ to build main.hex"
	@echo "make program .......... to flash fuses and firmware for TX"
	@echo "make fuse_write ....... to flash the fuses"
	@echo "make fuse_read ........ to receive the fuses"
	@echo "make clean ............ to delete objects and hex file"
	@echo "make clear ............ to delete objects and hex file"
	@echo "make tags ............. to create TAG library" 
	@echo "                        (requires http://ctags.sourceforge.net)"

# Define the rules for TAG library generation. The ctags must be installed. http://ctags.sourceforge.net
tags: *.c *.h
	$(TAGS) main.tests.c USART/*.c USART/*.h

# Define the main project output.
release: $(SOURCES_RELEASE) Makefile
	$(COMPILE_RELEASE) -o main.elf $(SOURCES_RELEASE)
	rm -f main.hex main.eep.hex
	avr-objcopy -j .eeprom --set-section-flags .eeprom="alloc,load" --change-section-lma .eeprom=0 -O ihex main.elf main.eep.hex
	avr-objcopy -j .text -j .data -O ihex -R .eeprom main.elf main.hex
	avr-size --format=avr --mcu=$(DEVICE) --radix=10 main.elf
	@echo "** RELEASE FINISHED **"

debug: $(SOURCES_DEBUG) Makefile
	$(COMPILE_DEBUG) -o main.elf $(SOURCES_DEBUG)
	rm -f main.hex main.eep.hex
	avr-objcopy -j .eeprom --set-section-flags .eeprom="alloc,load" --change-section-lma .eeprom=0 -O ihex main.elf main.eep.hex
	avr-objcopy -j .text -j .data -O ihex -R .eeprom main.elf main.hex
	avr-size --format=avr --mcu=$(DEVICE) --radix=10 main.elf
	@echo "** DEBUG FINISHED **"

#debug: main.hex COMPILE := $(COMPILE_DEBUG) OBJECTS := $(OBJECTS_DEBUG)

#program: flash fuse
program: main.hex main.eep.hex
	$(AVRDUDE) -e -U flash:w:main.hex:i
	$(AVRDUDE) -D -U eeprom:w:main.eep.hex:i

size: main.elf
	$(SIZE_TOOL_DETAILS) $(SIZE_TOOL_DETAILS_OPTIONS) main.elf

# debugging targets:

disasm: main.elf
	avr-objdump -d main.elf

#
# duplicate the cleaning option ...
clear: clean


# Generic rule for assembling Assembler source files:
#.S.o:
#	$(COMPILE) -x assembler-with-cpp -c $< -o $@
# "-x assembler-with-cpp" should not be necessary since this is the default
# file type for the .S (with capital S) extension. However, upper case
# characters are not always preserved on Windows. To ensure WinAVR
# compatibility define the file type manually.

# Generic rule for compiling C to assembler, used for debugging only.
#.c.s:
#	$(COMPILE) -S $< -o $@


# rule for deleting dependent files (those which can be built by Make):
clean:
	rm -f *.hex *.elf *.lst *.cof *.list *.map *.eep.hex *.s *.o USART/*.o


# rule for programming fuse bits:
fuse_write:
	@[ "$(FUSE_H)" != "" -a "$(FUSE_L)" != "" ] || \
		{ echo "*** Edit Makefile and choose values for FUSE_L and FUSE_H!"; exit 1; }
	$(AVRDUDE) -U hfuse:w:$(FUSE_H):m -U lfuse:w:$(FUSE_L):m

fuse_read:
	$(AVRDUDE) -U lfuse:r:-:h -U hfuse:r:-:h

##############################################################################
# Fuse values for particular devices
##############################################################################
# If your device is not listed here, go to
# http://palmavr.sourceforge.net/cgi-bin/fc.cgi
# and choose options for external crystal clock and no clock divider
#
################################## ATMega8 ##################################
# ATMega8 FUSE_L (Fuse low byte):
# 0x9f = 1 0 0 1   1 1 1 1
#        ^ ^ \ /   \--+--/
#        | |  |       +------- CKSEL 3..0 (external >8M crystal)
#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)
#        | +------------------ BODEN (BrownOut Detector enabled)
#        +-------------------- BODLEVEL (2.7V)
# ATMega8 FUSE_H (Fuse high byte):
# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)
#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0
#        | | | |   | +-------- BOOTSZ1
#        | | | |   + --------- EESAVE (don't preserve EEPROM over chip erase)
#        | | | +-------------- CKOPT (full output swing)
#        | | +---------------- SPIEN (allow serial programming)
#        | +------------------ WDTON (WDT not always on)
#        +-------------------- RSTDISBL (reset pin is enabled)
#
############################## ATMega48/88/168 ##############################
# ATMega*8 FUSE_L (Fuse low byte):
# 0xdf = 1 1 0 1   1 1 1 1
#        ^ ^ \ /   \--+--/
#        | |  |       +------- CKSEL 3..0 (external >8M crystal)
#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)
#        | +------------------ CKOUT (if 0: Clock output enabled)
#        +-------------------- CKDIV8 (if 0: divide by 8)
# ATMega*8 FUSE_H (Fuse high byte):
# 0xde = 1 1 0 1   1 1 1 0
#        ^ ^ ^ ^   ^ \-+-/
#        | | | |   |   +------ BODLEVEL 0..2 (110 = 1.8 V)
#        | | | |   + --------- EESAVE (preserve EEPROM over chip erase)
#        | | | +-------------- WDTON (if 0: watchdog always on)
#        | | +---------------- SPIEN (allow serial programming)
#        | +------------------ DWEN (debug wire enable)
#        +-------------------- RSTDISBL (reset pin is enabled)
#
############################## ATTiny25/45/85 ###############################
# ATMega*5 FUSE_L (Fuse low byte):
# 0xef = 1 1 1 0   1 1 1 1
#        ^ ^ \+/   \--+--/
#        | |  |       +------- CKSEL 3..0 (clock selection -> crystal @ 12 MHz)
#        | |  +--------------- SUT 1..0 (BOD enabled, fast rising power)
#        | +------------------ CKOUT (clock output on CKOUT pin -> disabled)
#        +-------------------- CKDIV8 (divide clock by 8 -> don't divide)
# ATMega*5 FUSE_H (Fuse high byte):
# 0xdd = 1 1 0 1   1 1 0 1
#        ^ ^ ^ ^   ^ \-+-/ 
#        | | | |   |   +------ BODLEVEL 2..0 (brownout trigger level -> 2.7V)
#        | | | |   +---------- EESAVE (preserve EEPROM on Chip Erase -> not preserved)
#        | | | +-------------- WDTON (watchdog timer always on -> disable)
#        | | +---------------- SPIEN (enable serial programming -> enabled)
#        | +------------------ DWEN (debug wire enable)
#        +-------------------- RSTDISBL (disable external reset -> enabled)
#
################################ ATTiny2313 #################################
# ATTiny2313 FUSE_L (Fuse low byte):
# 0xef = 1 1 1 0   1 1 1 1
#        ^ ^ \+/   \--+--/
#        | |  |       +------- CKSEL 3..0 (clock selection -> crystal @ 12 MHz)
#        | |  +--------------- SUT 1..0 (BOD enabled, fast rising power)
#        | +------------------ CKOUT (clock output on CKOUT pin -> disabled)
#        +-------------------- CKDIV8 (divide clock by 8 -> don't divide)
# ATTiny2313 FUSE_H (Fuse high byte):
# 0xdb = 1 1 0 1   1 0 1 1
#        ^ ^ ^ ^   \-+-/ ^
#        | | | |     |   +---- RSTDISBL (disable external reset -> enabled)
#        | | | |     +-------- BODLEVEL 2..0 (brownout trigger level -> 2.7V)
#        | | | +-------------- WDTON (watchdog timer always on -> disable)
#        | | +---------------- SPIEN (enable serial programming -> enabled)
#        | +------------------ EESAVE (preserve EEPROM on Chip Erase -> not preserved)
#        +-------------------- DWEN (debug wire enable)


